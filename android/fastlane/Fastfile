default_platform(:android)

platform :android do

desc "Increment version code"
 lane :increment_vc do
 increment_version_code(
       gradle_file_path: "./app/build.gradle",
 )
end
desc "Custom increment version code"
lane :custom_increment_vc do
  gradle_file = "app/build.gradle"
  version_code = `grep versionCode #{gradle_file} | awk '{print $2}'`.to_i
  new_version_code = version_code + 1
  sh "sed -i 's/versionCode #{version_code}/versionCode #{new_version_code}/' #{gradle_file}"
  puts "Updated version code to #{new_version_code}"
end

desc "Firebase custom increment version code"
lane :bump_version do
  # Get the latest release version from Firebase App Distribution
  latest_release = firebase_app_distribution_get_latest_release(
    app: ENV["APP_ID"],
    firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"] # Ensure you provide the correct token
  )
  
  # Increment the build number based on the latest release
  new_build_number = latest_release[:buildVersion].to_i + 1
  
  # Update the build number in your project
  increment_build_number(
    build_number: new_build_number
  )

  # Optionally, you might want to print out or verify the new build number
  puts "New build number is #{new_build_number}"

end


desc "Build"
lane :build do
  bump_version
  gradle(
     task: "assemble",
     build_type: "debug"
   )
end

  desc "Lane for distributing app using Firebase App Distributions"
  lane :distribute do
    firebase_app_distribution(
      app: ENV["APP_ID"],
      android_artifact_type: "APK",
      apk_path: "../android/app/build/outputs/apk/debug/app-debug.apk",
      debug: true,
      firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"]
    )
  end
end
